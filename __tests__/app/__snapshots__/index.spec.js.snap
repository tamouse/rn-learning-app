// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing the global App renders without crashing 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "red",
      "flex": 1,
      "justifyContent": "space-between",
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "white",
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "center",
        "width": "100%",
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      autoCorrect={false}
      onChangeText={[Function]}
      placeholder="account slug"
      style={
        Object {
          "borderColor": "#9e9e9e",
          "borderRadius": 4,
          "borderWidth": 1,
          "margin": 5,
          "padding": 5,
          "width": 250,
        }
      }
      value=""
    />
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      autoCorrect={false}
      onChangeText={[Function]}
      placeholder="user name"
      style={
        Object {
          "borderColor": "#9e9e9e",
          "borderRadius": 4,
          "borderWidth": 1,
          "margin": 5,
          "padding": 5,
          "width": 250,
        }
      }
      value=""
    />
    <TextInput
      allowFontScaling={true}
      autoCapitalize="none"
      autoCorrect={false}
      onChangeText={[Function]}
      placeholder="password"
      style={
        Object {
          "borderColor": "#9e9e9e",
          "borderRadius": 4,
          "borderWidth": 1,
          "margin": 5,
          "padding": 5,
          "width": 250,
        }
      }
      value=""
    />
    <View
      accessibilityComponentType="button"
      accessibilityLabel="Login Button"
      accessibilityTraits="button"
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#6c757d",
          "borderRadius": 5,
          "flexDirection": "row",
          "justifyContent": "space-between",
          "opacity": 1,
          "paddingBottom": 5,
          "paddingLeft": 25,
          "paddingRight": 25,
          "paddingTop": 5,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "#fafafa",
              "fontSize": 17,
              "fontWeight": "bold",
              "textAlign": "center",
            },
            Object {
              "color": "#aaa",
            },
          ]
        }
      >
        Log In
      </Text>
    </View>
    <Modal
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      visible={false}
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "white",
            "flex": 1,
            "flexDirection": "column",
            "justifyContent": "center",
            "width": "100%",
          }
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          id="loading_modal_text"
          style={
            Object {
              "backgroundColor": "rebeccapurple",
              "color": "white",
              "fontSize": 20,
              "fontWeight": "900",
              "padding": 20,
            }
          }
        >
          I'm Loading, yo
        </Text>
      </View>
    </Modal>
  </View>
</View>
`;
